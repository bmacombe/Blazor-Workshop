@page "/"
@using BlazorWrokshop.Data


Customers:
<TestComponent Customers="Customers"
               SelectedCustomer ="SelectedCustomer"
               CustomerSelectEvent="CustomerSelected"
               AddCustomerEvent="CustomerAdding"
               CustomerResetEvent="CustomerResetting"
               UpdateCustomerEvent="CustomerUpdating"
               DeleteCustomerEvent="CustomerDeleting">
</TestComponent>


@if (SelectedCustomer != null)
{
    <br />
    <br />
    <span style="color:green;">Customer Selected: @SelectedCustomer.Name</span>;
}


@code {


    List<Customer> Customers = new List<Customer>();


    Customer SelectedCustomer;


    void CustomerSelected(Customer customer)
    {
        SelectedCustomer = customer;
    }


    protected override async Task OnInitializedAsync()
    {
        Customers = await CustomerService.GetAllCustomers();
    }

    async Task CustomerResetting(int CustomerId)
    {
        var originalCustomer = await CustomerService.GetCustomer(CustomerId);
        if (originalCustomer != null)
        {
    // replace the customer and reset the SelectedCustomer
            Customers[Customers.FindIndex(
                x => x.CustomerId == CustomerId)] = originalCustomer;
            SelectedCustomer = originalCustomer;
        }
    }

    async Task CustomerAdding(Customer Customer)
    {
        var highest = Customers.OrderByDescending(i => i.CustomerId).Take(1).First();
        Customer.CustomerId = highest.CustomerId + 1;
        await CustomerService.AddCustomer(Customer);
        SelectedCustomer = Customer;
        Customers = await CustomerService.GetAllCustomers();
    }

    async Task CustomerUpdating(Customer Customer)
    {
        await CustomerService.UpdateCustomer(Customer);
        Customers = await CustomerService.GetAllCustomers();
    }

    async Task CustomerDeleting(Customer Customer)
    {
        await CustomerService.DeleteCustomer(Customer.CustomerId);
        Customers = await CustomerService.GetAllCustomers();
    }
}